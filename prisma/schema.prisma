// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                    String  @id @default(cuid())
  userId                String
  type                  String
  provider              String
  providerAccountId     String
  refreshTokenExpiresIn String?
  refresh_token         String?
  access_token          String?
  expires_at            Int?
  token_type            String?
  scope                 String?
  id_token              String?
  session_state         String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("USER")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model PortfolioCategory {
  id        String      @id @default(cuid())
  title     String    @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Portfolio Portfolio[]
}

model Portfolio {
  id                  String             @id @default(cuid())
  title               String @unique
  content             String?
  category            PortfolioCategory? @relation(fields: [portfolioCategoryId], references: [id])
  pos_home            Int?
  pos_category        Int?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  portfolioCategoryId String?
}

model SkillCategory {
  id        String   @id @default(cuid())
  title     String  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Skills    Skills[]
}

model Skills {
  id              String         @id @default(cuid())
  title           String        @unique
  category        SkillCategory? @relation(fields: [skillCategoryId], references: [id])
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  skillCategoryId String?
}
